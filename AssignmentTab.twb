<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CascadingFilters />
    <CollapsiblePane />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Custnames' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25'>
        <calculation class='tableau' formula='25' />
        <range granularity='25' max='100' min='25' />
      </column>
      <column caption='View by' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Category&quot;' />
          <member value='&quot;Sub-Category&quot;' />
        </members>
      </column>
      <column caption='Top N Customers' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='500'>
        <calculation class='tableau' formula='500' />
        <range granularity='1' max='800' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.06izeie0da6jce1f6d03t07qonn6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1d5q3ln1nsm9u71fnbipx1oughoc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/ExcelR Assignments/Tableau/Assignment Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d5q3ln1nsm9u71fnbipx1oughoc' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d5q3ln1nsm9u71fnbipx1oughoc' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:sum:Profit:qk:2]&quot;' value='Profit(%)' />
          <alias key='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:sum:Sales:qk:4]&quot;' value='Sales (%)' />
        </aliases>
      </column>
      <column caption='Sales %' datatype='real' name='[Calculation_1215127524335001601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Sales]))/SUM([Sales])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='sales by parameter' datatype='string' name='[Calculation_1215127524340072450]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;Region&apos; THEN [Region]&#13;&#10;WHEN &apos;Category&apos; THEN [Category]&#13;&#10;WHEN &apos;Sub-Category&apos; THEN [Sub-Category]&#13;&#10;END' />
      </column>
      <column caption='Colorcode' datatype='string' name='[Calculation_1215127525983891465]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales]) &gt; 100000 THEN &quot;Green&quot;&#13;&#10;ELSEIF SUM([Sales]) &gt;= 10000 AND SUM([Sales]) &lt;= 100000 THEN &quot;Orange&quot;&#13;&#10;ELSE &quot;Red&quot;&#13;&#10;END' />
      </column>
      <column caption='Reference Line' datatype='string' name='[Calculation_1477462204624543744]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF AVG([Sales])&gt; WINDOW_AVG(AVG([Sales]))&#13;&#10;THEN &apos;Above Average&apos; END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sales Percent' datatype='real' name='[Calculation_1477462205091450892]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/ TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='YoY %' datatype='string' name='[Calculation_1477462205301174298]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales]) &gt; 0 THEN &#13;&#10;&quot;▲&quot; ELSE &quot;▼&quot;&#13;&#10;END' />
      </column>
      <column caption='Custnames' datatype='boolean' name='[Calculation_1803691700427333633]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK(SUM([Sales])) = 25 or &#13;&#10;RANK(SUM([Sales])) = 50 OR &#13;&#10;RANK(SUM([Sales])) = 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='YTD' datatype='real' name='[Calculation_1803691700431699970]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;year&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
      </column>
      <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
      </column>
      <column caption='QTD' datatype='real' name='[Calculation_1803691700432384005]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;quarter&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
      </column>
      <column caption='MTD' datatype='real' name='[Calculation_1803691700432445446]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;month&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
      </column>
      <column caption='KPI' datatype='string' name='[Calculation_1803691700439146503]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Profit])&gt; 0 THEN &apos;Green&apos; ELSE &apos;red&apos; END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;3M Hangers With Command Adhesive, 3M Office Air Cleaner, 3M Organizer Strips and 3 more&quot;'>
            <value>&quot;3M Hangers With Command Adhesive&quot;</value>
            <value>&quot;3M Office Air Cleaner&quot;</value>
            <value>&quot;3M Organizer Strips&quot;</value>
            <value>&quot;3M Polarizing Light Filter Sleeves&quot;</value>
            <value>&quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot;</value>
            <value>&quot;3M Replacement Filter for Office Air Cleaner for 20&apos; x 33&apos; Room&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Acco 3-Hole Punch, Acco 6 Outlet Guardian Basic Surge Suppressor, Acco 6 Outlet Guardian Premium Plus Surge Suppressor and 34 more&quot;'>
            <value>&quot;Acco 3-Hole Punch&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
            <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
            <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
            <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
            <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
            <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
            <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
            <value>&quot;Acco Expandable Hanging Binders&quot;</value>
            <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
            <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
            <value>&quot;Acco Glide Clips&quot;</value>
            <value>&quot;Acco Hanging Data Binders&quot;</value>
            <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
            <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
            <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
            <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
            <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
            <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
            <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
            <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
            <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
            <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
            <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Apple EarPods with Remote and Mic, Apple iPhone 5, Apple iPhone 5C and 1 more&quot;'>
            <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
            <value>&quot;Apple iPhone 5&quot;</value>
            <value>&quot;Apple iPhone 5C&quot;</value>
            <value>&quot;Apple iPhone 5S&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Samsung Convoy 3, Samsung Galaxy Mega 6.3, Samsung Galaxy Note 2 and 8 more&quot;'>
            <value>&quot;Samsung Convoy 3&quot;</value>
            <value>&quot;Samsung Galaxy Mega 6.3&quot;</value>
            <value>&quot;Samsung Galaxy Note 2&quot;</value>
            <value>&quot;Samsung Galaxy Note 3&quot;</value>
            <value>&quot;Samsung Galaxy S III - 16GB - pebble blue (T-Mobile)&quot;</value>
            <value>&quot;Samsung Galaxy S4&quot;</value>
            <value>&quot;Samsung Galaxy S4 Active&quot;</value>
            <value>&quot;Samsung Galaxy S4 Mini&quot;</value>
            <value>&quot;Samsung HM1900 Bluetooth Headset&quot;</value>
            <value>&quot;Samsung Replacement EH64AVFWE Premium Headset&quot;</value>
            <value>&quot;Samsung Rugby III&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Xerox 188, Xerox 1880, Xerox 1881 and 171 more&quot;'>
            <value>&quot;Xerox 188&quot;</value>
            <value>&quot;Xerox 1880&quot;</value>
            <value>&quot;Xerox 1881&quot;</value>
            <value>&quot;Xerox 1882&quot;</value>
            <value>&quot;Xerox 1883&quot;</value>
            <value>&quot;Xerox 1884&quot;</value>
            <value>&quot;Xerox 1885&quot;</value>
            <value>&quot;Xerox 1886&quot;</value>
            <value>&quot;Xerox 1887&quot;</value>
            <value>&quot;Xerox 1888&quot;</value>
            <value>&quot;Xerox 1889&quot;</value>
            <value>&quot;Xerox 189&quot;</value>
            <value>&quot;Xerox 1890&quot;</value>
            <value>&quot;Xerox 1891&quot;</value>
            <value>&quot;Xerox 1892&quot;</value>
            <value>&quot;Xerox 1893&quot;</value>
            <value>&quot;Xerox 1894&quot;</value>
            <value>&quot;Xerox 1895&quot;</value>
            <value>&quot;Xerox 1896&quot;</value>
            <value>&quot;Xerox 1897&quot;</value>
            <value>&quot;Xerox 1898&quot;</value>
            <value>&quot;Xerox 1899&quot;</value>
            <value>&quot;Xerox 19&quot;</value>
            <value>&quot;Xerox 190&quot;</value>
            <value>&quot;Xerox 1900&quot;</value>
            <value>&quot;Xerox 1901&quot;</value>
            <value>&quot;Xerox 1902&quot;</value>
            <value>&quot;Xerox 1903&quot;</value>
            <value>&quot;Xerox 1905&quot;</value>
            <value>&quot;Xerox 1906&quot;</value>
            <value>&quot;Xerox 1907&quot;</value>
            <value>&quot;Xerox 1908&quot;</value>
            <value>&quot;Xerox 1909&quot;</value>
            <value>&quot;Xerox 191&quot;</value>
            <value>&quot;Xerox 1910&quot;</value>
            <value>&quot;Xerox 1911&quot;</value>
            <value>&quot;Xerox 1912&quot;</value>
            <value>&quot;Xerox 1913&quot;</value>
            <value>&quot;Xerox 1914&quot;</value>
            <value>&quot;Xerox 1915&quot;</value>
            <value>&quot;Xerox 1916&quot;</value>
            <value>&quot;Xerox 1917&quot;</value>
            <value>&quot;Xerox 1918&quot;</value>
            <value>&quot;Xerox 1919&quot;</value>
            <value>&quot;Xerox 192&quot;</value>
            <value>&quot;Xerox 1920&quot;</value>
            <value>&quot;Xerox 1921&quot;</value>
            <value>&quot;Xerox 1922&quot;</value>
            <value>&quot;Xerox 1923&quot;</value>
            <value>&quot;Xerox 1924&quot;</value>
            <value>&quot;Xerox 1925&quot;</value>
            <value>&quot;Xerox 1926&quot;</value>
            <value>&quot;Xerox 1927&quot;</value>
            <value>&quot;Xerox 1928&quot;</value>
            <value>&quot;Xerox 1929&quot;</value>
            <value>&quot;Xerox 193&quot;</value>
            <value>&quot;Xerox 1930&quot;</value>
            <value>&quot;Xerox 1931&quot;</value>
            <value>&quot;Xerox 1932&quot;</value>
            <value>&quot;Xerox 1933&quot;</value>
            <value>&quot;Xerox 1934&quot;</value>
            <value>&quot;Xerox 1935&quot;</value>
            <value>&quot;Xerox 1936&quot;</value>
            <value>&quot;Xerox 1937&quot;</value>
            <value>&quot;Xerox 1938&quot;</value>
            <value>&quot;Xerox 1939&quot;</value>
            <value>&quot;Xerox 194&quot;</value>
            <value>&quot;Xerox 1940&quot;</value>
            <value>&quot;Xerox 1941&quot;</value>
            <value>&quot;Xerox 1942&quot;</value>
            <value>&quot;Xerox 1943&quot;</value>
            <value>&quot;Xerox 1944&quot;</value>
            <value>&quot;Xerox 1945&quot;</value>
            <value>&quot;Xerox 1946&quot;</value>
            <value>&quot;Xerox 1947&quot;</value>
            <value>&quot;Xerox 1948&quot;</value>
            <value>&quot;Xerox 1949&quot;</value>
            <value>&quot;Xerox 195&quot;</value>
            <value>&quot;Xerox 1950&quot;</value>
            <value>&quot;Xerox 1951&quot;</value>
            <value>&quot;Xerox 1952&quot;</value>
            <value>&quot;Xerox 1953&quot;</value>
            <value>&quot;Xerox 1954&quot;</value>
            <value>&quot;Xerox 1955&quot;</value>
            <value>&quot;Xerox 1956&quot;</value>
            <value>&quot;Xerox 1957&quot;</value>
            <value>&quot;Xerox 1958&quot;</value>
            <value>&quot;Xerox 1959&quot;</value>
            <value>&quot;Xerox 196&quot;</value>
            <value>&quot;Xerox 1960&quot;</value>
            <value>&quot;Xerox 1962&quot;</value>
            <value>&quot;Xerox 1963&quot;</value>
            <value>&quot;Xerox 1964&quot;</value>
            <value>&quot;Xerox 1965&quot;</value>
            <value>&quot;Xerox 1966&quot;</value>
            <value>&quot;Xerox 1967&quot;</value>
            <value>&quot;Xerox 1968&quot;</value>
            <value>&quot;Xerox 1969&quot;</value>
            <value>&quot;Xerox 197&quot;</value>
            <value>&quot;Xerox 1970&quot;</value>
            <value>&quot;Xerox 1971&quot;</value>
            <value>&quot;Xerox 1972&quot;</value>
            <value>&quot;Xerox 1973&quot;</value>
            <value>&quot;Xerox 1974&quot;</value>
            <value>&quot;Xerox 1975&quot;</value>
            <value>&quot;Xerox 1976&quot;</value>
            <value>&quot;Xerox 1977&quot;</value>
            <value>&quot;Xerox 1978&quot;</value>
            <value>&quot;Xerox 1979&quot;</value>
            <value>&quot;Xerox 198&quot;</value>
            <value>&quot;Xerox 1980&quot;</value>
            <value>&quot;Xerox 1981&quot;</value>
            <value>&quot;Xerox 1982&quot;</value>
            <value>&quot;Xerox 1983&quot;</value>
            <value>&quot;Xerox 1984&quot;</value>
            <value>&quot;Xerox 1985&quot;</value>
            <value>&quot;Xerox 1986&quot;</value>
            <value>&quot;Xerox 1987&quot;</value>
            <value>&quot;Xerox 1988&quot;</value>
            <value>&quot;Xerox 1989&quot;</value>
            <value>&quot;Xerox 199&quot;</value>
            <value>&quot;Xerox 1990&quot;</value>
            <value>&quot;Xerox 1991&quot;</value>
            <value>&quot;Xerox 1992&quot;</value>
            <value>&quot;Xerox 1993&quot;</value>
            <value>&quot;Xerox 1994&quot;</value>
            <value>&quot;Xerox 1995&quot;</value>
            <value>&quot;Xerox 1996&quot;</value>
            <value>&quot;Xerox 1997&quot;</value>
            <value>&quot;Xerox 1998&quot;</value>
            <value>&quot;Xerox 1999&quot;</value>
            <value>&quot;Xerox 2&quot;</value>
            <value>&quot;Xerox 20&quot;</value>
            <value>&quot;Xerox 200&quot;</value>
            <value>&quot;Xerox 2000&quot;</value>
            <value>&quot;Xerox 201&quot;</value>
            <value>&quot;Xerox 202&quot;</value>
            <value>&quot;Xerox 203&quot;</value>
            <value>&quot;Xerox 204&quot;</value>
            <value>&quot;Xerox 205&quot;</value>
            <value>&quot;Xerox 206&quot;</value>
            <value>&quot;Xerox 207&quot;</value>
            <value>&quot;Xerox 208&quot;</value>
            <value>&quot;Xerox 209&quot;</value>
            <value>&quot;Xerox 21&quot;</value>
            <value>&quot;Xerox 210&quot;</value>
            <value>&quot;Xerox 211&quot;</value>
            <value>&quot;Xerox 212&quot;</value>
            <value>&quot;Xerox 213&quot;</value>
            <value>&quot;Xerox 214&quot;</value>
            <value>&quot;Xerox 215&quot;</value>
            <value>&quot;Xerox 216&quot;</value>
            <value>&quot;Xerox 217&quot;</value>
            <value>&quot;Xerox 218&quot;</value>
            <value>&quot;Xerox 219&quot;</value>
            <value>&quot;Xerox 22&quot;</value>
            <value>&quot;Xerox 220&quot;</value>
            <value>&quot;Xerox 221&quot;</value>
            <value>&quot;Xerox 222&quot;</value>
            <value>&quot;Xerox 223&quot;</value>
            <value>&quot;Xerox 224&quot;</value>
            <value>&quot;Xerox 225&quot;</value>
            <value>&quot;Xerox 226&quot;</value>
            <value>&quot;Xerox 227&quot;</value>
            <value>&quot;Xerox 228&quot;</value>
            <value>&quot;Xerox 229&quot;</value>
            <value>&quot;Xerox 23&quot;</value>
            <value>&quot;Xerox 230&quot;</value>
            <value>&quot;Xerox 231&quot;</value>
            <value>&quot;Xerox 232&quot;</value>
            <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
            <value>&quot;Xerox Blank Computer Paper&quot;</value>
            <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
            <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Sales]' peg='0' size='10' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_80891BAACC2446FCA5A1E1AF6C18BEFF]' role='measure' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Others' />
          <alias key='true' value='Top 50 Customers' />
        </aliases>
      </column-instance>
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Avg' name='[pcdf:avg:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]' ordering-field='[federated.06izeie0da6jce1f6d03t07qonn6].[Order Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' ordering-field='[federated.06izeie0da6jce1f6d03t07qonn6].[Calculation_1803691700431888387]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]' ordering-field='[federated.06izeie0da6jce1f6d03t07qonn6].[Order Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1215127525983891465]' derivation='User' name='[usr:Calculation_1215127525983891465:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1477462204624543744]' derivation='User' name='[usr:Calculation_1477462204624543744:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1477462205301174298]' derivation='User' name='[usr:Calculation_1477462205301174298:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1803691700439146503]' derivation='User' name='[usr:Calculation_1803691700439146503:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Top 50 Customers' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Product Name Set' name='[Product Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Product Name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country/Region'>
          <field>[Country/Region]</field>
          <field>[Region]</field>
          <field>[State/Province]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_1803691700439146503:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;red&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neil Cohen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harry Olson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jill Trafton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Peterman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jennifer Sheldon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Galang&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michael Knudson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Customer Name Set:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1477462205301174298:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;▲&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#00aa00'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205301977121:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626366466:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205301973023:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205101035539:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcdf:avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcdf:sum:Sales:qk:1]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205101027345:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205248692246:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088894983:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626378756:qk]&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088903177:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1477462204624543744:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Above Average&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1215127525983891465:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='View by' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_80891BAACC2446FCA5A1E1AF6C18BEFF'>
            <properties context=''>
              <relation connection='excel-direct.1d5q3ln1nsm9u71fnbipx1oughoc' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='netflix_titles' inline='true' name='federated.1izzj2w0sa742j1f1m1791uocipq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='G:/ExcelR Assignments/Tableau/Assignment Tableau/netflix_titles.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_cast' table='[netflix_titles_cast$]' type='table'>
          <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
            <column datatype='string' name='cast' ordinal='0' />
            <column datatype='integer' name='show_id' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles' table='[netflix_titles$]' type='table'>
            <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
              <column datatype='string' name='duration_minutes' ordinal='0' />
              <column datatype='string' name='duration_seasons' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='title' ordinal='3' />
              <column datatype='date' name='date_added' ordinal='4' />
              <column datatype='integer' name='release_year' ordinal='5' />
              <column datatype='string' name='rating' ordinal='6' />
              <column datatype='string' name='description' ordinal='7' />
              <column datatype='integer' name='show_id' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_cast' table='[netflix_titles_cast$]' type='table'>
            <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
              <column datatype='string' name='cast' ordinal='0' />
              <column datatype='integer' name='show_id' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
            <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
              <column datatype='string' name='listed_in' ordinal='0' />
              <column datatype='integer' name='show_id' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_countries' table='[netflix_titles_countries$]' type='table'>
            <columns gridOrigin='A1:B7180:no:A1:B7180:0' header='yes' outcome='6'>
              <column datatype='string' name='country' ordinal='0' />
              <column datatype='integer' name='show_id' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cast]' value='[netflix_titles_cast].[cast]' />
          <map key='[country]' value='[netflix_titles_countries].[country]' />
          <map key='[date_added]' value='[netflix_titles].[date_added]' />
          <map key='[description]' value='[netflix_titles].[description]' />
          <map key='[duration_minutes]' value='[netflix_titles].[duration_minutes]' />
          <map key='[duration_seasons]' value='[netflix_titles].[duration_seasons]' />
          <map key='[listed_in]' value='[netflix_titles_category].[listed_in]' />
          <map key='[rating]' value='[netflix_titles].[rating]' />
          <map key='[release_year]' value='[netflix_titles].[release_year]' />
          <map key='[show_id (netflix!titles!cast)]' value='[netflix_titles_cast].[show_id]' />
          <map key='[show_id (netflix!titles!category)]' value='[netflix_titles_category].[show_id]' />
          <map key='[show_id (netflix!titles!countries)]' value='[netflix_titles_countries].[show_id]' />
          <map key='[show_id]' value='[netflix_titles].[show_id]' />
          <map key='[title]' value='[netflix_titles].[title]' />
          <map key='[type]' value='[netflix_titles].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I6237:no:A1:I6237:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_countries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7180:no:A1:B7180:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_minutes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_minutes]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_minutes</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_seasons</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_seasons]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_seasons</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!cast_F3D88DF3CB7E41EAA136F334501E906C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!cast)]</local-name>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!cast_F3D88DF3CB7E41EAA136F334501E906C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!category_AF557B650C1446F78BE1717C460B5402]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!category)]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!category_AF557B650C1446F78BE1717C460B5402]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles_countries]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!countries_22AC80AD3E2648EB9115C460F80C8B65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!countries)]</local-name>
            <parent-name>[netflix_titles_countries]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[netflix!titles!countries_22AC80AD3E2648EB9115C460F80C8B65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1477462206743031848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([cast])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_cast' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!cast_F3D88DF3CB7E41EAA136F334501E906C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_category' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!category_AF557B650C1446F78BE1717C460B5402]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles_countries' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles!countries_22AC80AD3E2648EB9115C460F80C8B65]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_F0B8881ED2D9480F800249E0E3D34875]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Duration Minutes' datatype='string' name='[duration_minutes]' role='dimension' type='nominal' />
      <column caption='Duration Seasons' datatype='string' name='[duration_seasons]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id (Netflix!Titles!Cast)' datatype='integer' name='[show_id (netflix!titles!cast)]' role='dimension' type='ordinal' />
      <column caption='Show Id (Netflix!Titles!Category)' datatype='integer' name='[show_id (netflix!titles!category)]' role='dimension' type='ordinal' />
      <column caption='Show Id (Netflix!Titles!Countries)' datatype='integer' name='[show_id (netflix!titles!countries)]' role='dimension' type='ordinal' />
      <column caption='Show Id' datatype='integer' name='[show_id]' role='measure' type='quantitative' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[cast]' derivation='Count' name='[cnt:cast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cast]' derivation='CountD' name='[ctd:cast:qk]' pivot='key' type='quantitative' />
      <column-instance column='[show_id]' derivation='CountD' name='[ctd:show_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[show_id]' derivation='Sum' name='[sum:show_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1477462206743031848]' derivation='User' name='[usr:Calculation_1477462206743031848:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cast]' derivation='Count' name='[win:cnt:cast:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[cast]' derivation='CountD' name='[win:ctd:cast:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[cnt:cast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:cast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[usr:Calculation_1477462206700433446:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[win:cnt:cast:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[win:ctd:cast:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[sum:show_id:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[usr:Calculation_1477462206743031848:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1izzj2w0sa742j1f1m1791uocipq].[usr:Calculation_1477462206700654631:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='netflix_titles_cast' id='netflix!titles!cast_F3D88DF3CB7E41EAA136F334501E906C'>
            <properties context=''>
              <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_cast' table='[netflix_titles_cast$]' type='table'>
                <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='cast' ordinal='0' />
                  <column datatype='integer' name='show_id' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='netflix_titles_category' id='netflix!titles!category_AF557B650C1446F78BE1717C460B5402'>
            <properties context=''>
              <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
                <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='listed_in' ordinal='0' />
                  <column datatype='integer' name='show_id' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='netflix_titles_countries' id='netflix!titles!countries_22AC80AD3E2648EB9115C460F80C8B65'>
            <properties context=''>
              <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles_countries' table='[netflix_titles_countries$]' type='table'>
                <columns gridOrigin='A1:B7180:no:A1:B7180:0' header='yes' outcome='6'>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='show_id' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='netflix_titles' id='netflix!titles_F0B8881ED2D9480F800249E0E3D34875'>
            <properties context=''>
              <relation connection='excel-direct.12caofz0v1yu9t0zxlhg70pn0ka6' name='netflix_titles' table='[netflix_titles$]' type='table'>
                <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
                  <column datatype='string' name='duration_minutes' ordinal='0' />
                  <column datatype='string' name='duration_seasons' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='title' ordinal='3' />
                  <column datatype='date' name='date_added' ordinal='4' />
                  <column datatype='integer' name='release_year' ordinal='5' />
                  <column datatype='string' name='rating' ordinal='6' />
                  <column datatype='string' name='description' ordinal='7' />
                  <column datatype='integer' name='show_id' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[show_id]' />
              <expression op='[show_id (netflix!titles!cast)]' />
            </expression>
            <first-end-point object-id='netflix!titles_F0B8881ED2D9480F800249E0E3D34875' />
            <second-end-point object-id='netflix!titles!cast_F3D88DF3CB7E41EAA136F334501E906C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[show_id]' />
              <expression op='[show_id (netflix!titles!category)]' />
            </expression>
            <first-end-point object-id='netflix!titles_F0B8881ED2D9480F800249E0E3D34875' />
            <second-end-point object-id='netflix!titles!category_AF557B650C1446F78BE1717C460B5402' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[show_id]' />
              <expression op='[show_id (netflix!titles!countries)]' />
            </expression>
            <first-end-point object-id='netflix!titles_F0B8881ED2D9480F800249E0E3D34875' />
            <second-end-point object-id='netflix!titles!countries_22AC80AD3E2648EB9115C460F80C8B65' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Category Wise Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot; $&quot;#,##0,K;&quot; $&quot;-#,##0,K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00aa00' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' value='Year'>
              <formatted-text>
                <run fontalignment='0'>Year</run>
              </formatted-text>
            </format>
            <format attr='font-size' value='8' />
            <format attr='title' field='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' value='Category'>
              <formatted-text>
                <run fontalignment='0'>Category</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]' value='Region'>
              <formatted-text>
                <run fontalignment='0'>Region</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='8' />
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{24766A49-BFAF-4BE0-BBAC-AE8BADC21596}' />
    </worksheet>
    <worksheet name='Current Year Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]'>
            <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;&quot;$&quot;-#,##0,K' />
            <format attr='text-align' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='18'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Current Year Sales</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</cols>
      </table>
      <simple-id uuid='{2DC497EF-4486-4016-992F-2D25CFA419DC}' />
    </worksheet>
    <worksheet name='Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer ID:nk]' value='8' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer ID:nk]' value='8' />
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Discount:qk]' value='8' />
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]' value='8' />
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Quantity:qk]' value='8' />
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer ID:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok] / ([federated.06izeie0da6jce1f6d03t07qonn6].[qr:Order Date:ok] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Product ID:nk] / [federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]))))))))</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E9AF175C-72EF-4CA4-A1CB-8E5B812FDCDA}' />
    </worksheet>
    <worksheet name='Monthly Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[tmn:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;&quot;$&quot;-#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[tmn:Order Date:qk]' value='*mmmm, yyyy' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-size' scope='cols' value='5' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00aa00' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#8cd17d' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk] + [federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk])</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{243227BF-0524-41CC-9026-76206DFE6636}' />
    </worksheet>
    <worksheet name='Previous Year sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]'>
            <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='center' />
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;&quot;$&quot;-#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='11'>Previous Year Sales</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</cols>
      </table>
      <simple-id uuid='{D36EBF7A-FEEF-44A1-9286-29C490779FC9}' />
    </worksheet>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Least Profit in 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]'>
            <groupfilter count='1' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{C3D5E35F-8C42-4B57-9782-D531FC6C9D34}' />
    </worksheet>
    <worksheet name='Q10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Customers' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='500'>
              <calculation class='tableau' formula='500' />
              <range granularity='1' max='800' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 3]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{1D1DD195-3367-4D8A-91C3-48BC786A0295}' />
    </worksheet>
    <worksheet name='Q12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Sales]' peg='0' size='10' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Count' name='[pcto:cnt:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <natural-sort column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sales (bin):ok]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[cnt:Sales:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:cnt:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[cnt:Sales:qk]> ]]></run>
                <run bold='true' fontcolor='#f28e2b'><![CDATA[( <[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:cnt:Sales:qk]>)]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sales (bin):ok]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:cnt:Sales:qk]</cols>
      </table>
      <simple-id uuid='{83AF39BA-C37B-4562-852B-CBAEC2BD18C8}' />
    </worksheet>
    <worksheet name='Q13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='Colorcode' datatype='string' name='[Calculation_1215127525983891465]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales]) &gt; 100000 THEN &quot;Green&quot;&#13;&#10;ELSEIF SUM([Sales]) &gt;= 10000 AND SUM([Sales]) &lt;= 100000 THEN &quot;Orange&quot;&#13;&#10;ELSE &quot;Red&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1215127525983891465]' derivation='User' name='[usr:Calculation_1215127525983891465:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1215127525983891465:nk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[none:Country/Region:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk] / ([federated.06izeie0da6jce1f6d03t07qonn6].[none:State/Province:nk] / [federated.06izeie0da6jce1f6d03t07qonn6].[none:City:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{D9AFFB40-E2EC-40F6-9D39-9BC39CE931D1}' />
    </worksheet>
    <worksheet name='Q14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;3M Hangers With Command Adhesive, 3M Office Air Cleaner, 3M Organizer Strips and 3 more&quot;'>
                  <value>&quot;3M Hangers With Command Adhesive&quot;</value>
                  <value>&quot;3M Office Air Cleaner&quot;</value>
                  <value>&quot;3M Organizer Strips&quot;</value>
                  <value>&quot;3M Polarizing Light Filter Sleeves&quot;</value>
                  <value>&quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot;</value>
                  <value>&quot;3M Replacement Filter for Office Air Cleaner for 20&apos; x 33&apos; Room&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Acco 3-Hole Punch, Acco 6 Outlet Guardian Basic Surge Suppressor, Acco 6 Outlet Guardian Premium Plus Surge Suppressor and 34 more&quot;'>
                  <value>&quot;Acco 3-Hole Punch&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
                  <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
                  <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
                  <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
                  <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
                  <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
                  <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
                  <value>&quot;Acco Expandable Hanging Binders&quot;</value>
                  <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
                  <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
                  <value>&quot;Acco Glide Clips&quot;</value>
                  <value>&quot;Acco Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
                  <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
                  <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
                  <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
                  <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
                  <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
                  <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
                  <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
                  <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
                  <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Apple EarPods with Remote and Mic, Apple iPhone 5, Apple iPhone 5C and 1 more&quot;'>
                  <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
                  <value>&quot;Apple iPhone 5&quot;</value>
                  <value>&quot;Apple iPhone 5C&quot;</value>
                  <value>&quot;Apple iPhone 5S&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Samsung Convoy 3, Samsung Galaxy Mega 6.3, Samsung Galaxy Note 2 and 8 more&quot;'>
                  <value>&quot;Samsung Convoy 3&quot;</value>
                  <value>&quot;Samsung Galaxy Mega 6.3&quot;</value>
                  <value>&quot;Samsung Galaxy Note 2&quot;</value>
                  <value>&quot;Samsung Galaxy Note 3&quot;</value>
                  <value>&quot;Samsung Galaxy S III - 16GB - pebble blue (T-Mobile)&quot;</value>
                  <value>&quot;Samsung Galaxy S4&quot;</value>
                  <value>&quot;Samsung Galaxy S4 Active&quot;</value>
                  <value>&quot;Samsung Galaxy S4 Mini&quot;</value>
                  <value>&quot;Samsung HM1900 Bluetooth Headset&quot;</value>
                  <value>&quot;Samsung Replacement EH64AVFWE Premium Headset&quot;</value>
                  <value>&quot;Samsung Rugby III&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Xerox 188, Xerox 1880, Xerox 1881 and 171 more&quot;'>
                  <value>&quot;Xerox 188&quot;</value>
                  <value>&quot;Xerox 1880&quot;</value>
                  <value>&quot;Xerox 1881&quot;</value>
                  <value>&quot;Xerox 1882&quot;</value>
                  <value>&quot;Xerox 1883&quot;</value>
                  <value>&quot;Xerox 1884&quot;</value>
                  <value>&quot;Xerox 1885&quot;</value>
                  <value>&quot;Xerox 1886&quot;</value>
                  <value>&quot;Xerox 1887&quot;</value>
                  <value>&quot;Xerox 1888&quot;</value>
                  <value>&quot;Xerox 1889&quot;</value>
                  <value>&quot;Xerox 189&quot;</value>
                  <value>&quot;Xerox 1890&quot;</value>
                  <value>&quot;Xerox 1891&quot;</value>
                  <value>&quot;Xerox 1892&quot;</value>
                  <value>&quot;Xerox 1893&quot;</value>
                  <value>&quot;Xerox 1894&quot;</value>
                  <value>&quot;Xerox 1895&quot;</value>
                  <value>&quot;Xerox 1896&quot;</value>
                  <value>&quot;Xerox 1897&quot;</value>
                  <value>&quot;Xerox 1898&quot;</value>
                  <value>&quot;Xerox 1899&quot;</value>
                  <value>&quot;Xerox 19&quot;</value>
                  <value>&quot;Xerox 190&quot;</value>
                  <value>&quot;Xerox 1900&quot;</value>
                  <value>&quot;Xerox 1901&quot;</value>
                  <value>&quot;Xerox 1902&quot;</value>
                  <value>&quot;Xerox 1903&quot;</value>
                  <value>&quot;Xerox 1905&quot;</value>
                  <value>&quot;Xerox 1906&quot;</value>
                  <value>&quot;Xerox 1907&quot;</value>
                  <value>&quot;Xerox 1908&quot;</value>
                  <value>&quot;Xerox 1909&quot;</value>
                  <value>&quot;Xerox 191&quot;</value>
                  <value>&quot;Xerox 1910&quot;</value>
                  <value>&quot;Xerox 1911&quot;</value>
                  <value>&quot;Xerox 1912&quot;</value>
                  <value>&quot;Xerox 1913&quot;</value>
                  <value>&quot;Xerox 1914&quot;</value>
                  <value>&quot;Xerox 1915&quot;</value>
                  <value>&quot;Xerox 1916&quot;</value>
                  <value>&quot;Xerox 1917&quot;</value>
                  <value>&quot;Xerox 1918&quot;</value>
                  <value>&quot;Xerox 1919&quot;</value>
                  <value>&quot;Xerox 192&quot;</value>
                  <value>&quot;Xerox 1920&quot;</value>
                  <value>&quot;Xerox 1921&quot;</value>
                  <value>&quot;Xerox 1922&quot;</value>
                  <value>&quot;Xerox 1923&quot;</value>
                  <value>&quot;Xerox 1924&quot;</value>
                  <value>&quot;Xerox 1925&quot;</value>
                  <value>&quot;Xerox 1926&quot;</value>
                  <value>&quot;Xerox 1927&quot;</value>
                  <value>&quot;Xerox 1928&quot;</value>
                  <value>&quot;Xerox 1929&quot;</value>
                  <value>&quot;Xerox 193&quot;</value>
                  <value>&quot;Xerox 1930&quot;</value>
                  <value>&quot;Xerox 1931&quot;</value>
                  <value>&quot;Xerox 1932&quot;</value>
                  <value>&quot;Xerox 1933&quot;</value>
                  <value>&quot;Xerox 1934&quot;</value>
                  <value>&quot;Xerox 1935&quot;</value>
                  <value>&quot;Xerox 1936&quot;</value>
                  <value>&quot;Xerox 1937&quot;</value>
                  <value>&quot;Xerox 1938&quot;</value>
                  <value>&quot;Xerox 1939&quot;</value>
                  <value>&quot;Xerox 194&quot;</value>
                  <value>&quot;Xerox 1940&quot;</value>
                  <value>&quot;Xerox 1941&quot;</value>
                  <value>&quot;Xerox 1942&quot;</value>
                  <value>&quot;Xerox 1943&quot;</value>
                  <value>&quot;Xerox 1944&quot;</value>
                  <value>&quot;Xerox 1945&quot;</value>
                  <value>&quot;Xerox 1946&quot;</value>
                  <value>&quot;Xerox 1947&quot;</value>
                  <value>&quot;Xerox 1948&quot;</value>
                  <value>&quot;Xerox 1949&quot;</value>
                  <value>&quot;Xerox 195&quot;</value>
                  <value>&quot;Xerox 1950&quot;</value>
                  <value>&quot;Xerox 1951&quot;</value>
                  <value>&quot;Xerox 1952&quot;</value>
                  <value>&quot;Xerox 1953&quot;</value>
                  <value>&quot;Xerox 1954&quot;</value>
                  <value>&quot;Xerox 1955&quot;</value>
                  <value>&quot;Xerox 1956&quot;</value>
                  <value>&quot;Xerox 1957&quot;</value>
                  <value>&quot;Xerox 1958&quot;</value>
                  <value>&quot;Xerox 1959&quot;</value>
                  <value>&quot;Xerox 196&quot;</value>
                  <value>&quot;Xerox 1960&quot;</value>
                  <value>&quot;Xerox 1962&quot;</value>
                  <value>&quot;Xerox 1963&quot;</value>
                  <value>&quot;Xerox 1964&quot;</value>
                  <value>&quot;Xerox 1965&quot;</value>
                  <value>&quot;Xerox 1966&quot;</value>
                  <value>&quot;Xerox 1967&quot;</value>
                  <value>&quot;Xerox 1968&quot;</value>
                  <value>&quot;Xerox 1969&quot;</value>
                  <value>&quot;Xerox 197&quot;</value>
                  <value>&quot;Xerox 1970&quot;</value>
                  <value>&quot;Xerox 1971&quot;</value>
                  <value>&quot;Xerox 1972&quot;</value>
                  <value>&quot;Xerox 1973&quot;</value>
                  <value>&quot;Xerox 1974&quot;</value>
                  <value>&quot;Xerox 1975&quot;</value>
                  <value>&quot;Xerox 1976&quot;</value>
                  <value>&quot;Xerox 1977&quot;</value>
                  <value>&quot;Xerox 1978&quot;</value>
                  <value>&quot;Xerox 1979&quot;</value>
                  <value>&quot;Xerox 198&quot;</value>
                  <value>&quot;Xerox 1980&quot;</value>
                  <value>&quot;Xerox 1981&quot;</value>
                  <value>&quot;Xerox 1982&quot;</value>
                  <value>&quot;Xerox 1983&quot;</value>
                  <value>&quot;Xerox 1984&quot;</value>
                  <value>&quot;Xerox 1985&quot;</value>
                  <value>&quot;Xerox 1986&quot;</value>
                  <value>&quot;Xerox 1987&quot;</value>
                  <value>&quot;Xerox 1988&quot;</value>
                  <value>&quot;Xerox 1989&quot;</value>
                  <value>&quot;Xerox 199&quot;</value>
                  <value>&quot;Xerox 1990&quot;</value>
                  <value>&quot;Xerox 1991&quot;</value>
                  <value>&quot;Xerox 1992&quot;</value>
                  <value>&quot;Xerox 1993&quot;</value>
                  <value>&quot;Xerox 1994&quot;</value>
                  <value>&quot;Xerox 1995&quot;</value>
                  <value>&quot;Xerox 1996&quot;</value>
                  <value>&quot;Xerox 1997&quot;</value>
                  <value>&quot;Xerox 1998&quot;</value>
                  <value>&quot;Xerox 1999&quot;</value>
                  <value>&quot;Xerox 2&quot;</value>
                  <value>&quot;Xerox 20&quot;</value>
                  <value>&quot;Xerox 200&quot;</value>
                  <value>&quot;Xerox 2000&quot;</value>
                  <value>&quot;Xerox 201&quot;</value>
                  <value>&quot;Xerox 202&quot;</value>
                  <value>&quot;Xerox 203&quot;</value>
                  <value>&quot;Xerox 204&quot;</value>
                  <value>&quot;Xerox 205&quot;</value>
                  <value>&quot;Xerox 206&quot;</value>
                  <value>&quot;Xerox 207&quot;</value>
                  <value>&quot;Xerox 208&quot;</value>
                  <value>&quot;Xerox 209&quot;</value>
                  <value>&quot;Xerox 21&quot;</value>
                  <value>&quot;Xerox 210&quot;</value>
                  <value>&quot;Xerox 211&quot;</value>
                  <value>&quot;Xerox 212&quot;</value>
                  <value>&quot;Xerox 213&quot;</value>
                  <value>&quot;Xerox 214&quot;</value>
                  <value>&quot;Xerox 215&quot;</value>
                  <value>&quot;Xerox 216&quot;</value>
                  <value>&quot;Xerox 217&quot;</value>
                  <value>&quot;Xerox 218&quot;</value>
                  <value>&quot;Xerox 219&quot;</value>
                  <value>&quot;Xerox 22&quot;</value>
                  <value>&quot;Xerox 220&quot;</value>
                  <value>&quot;Xerox 221&quot;</value>
                  <value>&quot;Xerox 222&quot;</value>
                  <value>&quot;Xerox 223&quot;</value>
                  <value>&quot;Xerox 224&quot;</value>
                  <value>&quot;Xerox 225&quot;</value>
                  <value>&quot;Xerox 226&quot;</value>
                  <value>&quot;Xerox 227&quot;</value>
                  <value>&quot;Xerox 228&quot;</value>
                  <value>&quot;Xerox 229&quot;</value>
                  <value>&quot;Xerox 23&quot;</value>
                  <value>&quot;Xerox 230&quot;</value>
                  <value>&quot;Xerox 231&quot;</value>
                  <value>&quot;Xerox 232&quot;</value>
                  <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
                  <value>&quot;Xerox Blank Computer Paper&quot;</value>
                  <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
                  <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[pcto:avg:Discount:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[Product Name (group)]'>
            <groupfilter function='level-members' level='[Product Name (group)]' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[Product Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:avg:Discount:qk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[Product Name (group)]</cols>
      </table>
      <simple-id uuid='{A1AD670A-08B2-4D7A-9489-8CD784DD6456}' />
    </worksheet>
    <worksheet name='Q15'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='Reference Line' datatype='string' name='[Calculation_1477462204624543744]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF AVG([Sales])&gt; WINDOW_AVG(AVG([Sales]))&#13;&#10;THEN &apos;Above Average&apos; END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1477462204624543744]' derivation='User' name='[usr:Calculation_1477462204624543744:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462204624543744:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[avg:Sales:qk]</rows>
        <cols>([federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok] / [federated.06izeie0da6jce1f6d03t07qonn6].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{BF01B7F6-6D16-44EE-8527-F4121B7D4268}' />
    </worksheet>
    <worksheet name='Q16'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Lowest Profit</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='4971.1724764428154'>
                  <node-reference>
                    <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-6919.8392980701774'>
                  <node-reference>
                    <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Highest Profit</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='18248.055810704478'>
                  <node-reference>
                    <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8759.6426501929782'>
                  <node-reference>
                    <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F02D21F0-1C96-4D13-B761-228E3872A01C}' />
    </worksheet>
    <worksheet name='Q17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='0' datatype='integer' name='[Calculation_1477462204626366466]' role='measure' type='quantitative' user:unnamed='Q17'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_1477462204626378756]' role='measure' type='quantitative' user:unnamed='Q17'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1477462204626366466]' derivation='Sum' name='[sum:Calculation_1477462204626366466:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1477462204626378756]' derivation='Sum' name='[sum:Calculation_1477462204626378756:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626378756:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626366466:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Ship Mode:nk]' />
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
              <lod column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Light'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[none:Ship Mode:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Tableau Light'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='7.2371110916137695' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626378756:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold'>Total Orders</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Tableau Bold'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.3685784339904785' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626366466:qk] + [federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626378756:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{E60697C4-6212-43E6-8888-DAB279926321}' />
    </worksheet>
    <worksheet name='Q19'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles' name='federated.1izzj2w0sa742j1f1m1791uocipq' />
          </datasources>
          <datasource-dependencies datasource='federated.1izzj2w0sa742j1f1m1791uocipq'>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[cast]' derivation='CountD' name='[ctd:cast:qk]' pivot='key' type='quantitative' />
            <column-instance column='[show_id]' derivation='CountD' name='[ctd:show_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Show Id' datatype='integer' name='[show_id]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:cast:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]' />
              <color column='[federated.1izzj2w0sa742j1f1m1791uocipq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:cast:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]' />
              <color column='[federated.1izzj2w0sa742j1f1m1791uocipq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]' />
              <color column='[federated.1izzj2w0sa742j1f1m1791uocipq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:cast:qk] + [federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk])</rows>
        <cols>[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{A8601F3B-8B7B-4074-B0B8-B98D98DDA685}' />
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='Custnames' datatype='boolean' name='[Calculation_1803691700427333633]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK(SUM([Sales])) = 25 or &#13;&#10;RANK(SUM([Sales])) = 50 OR &#13;&#10;RANK(SUM([Sales])) = 100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700427333633]' derivation='User' name='[usr:Calculation_1803691700427333633:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700427333633:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1803691700427333633:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700427333633:nk]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B55075A4-7F3A-4088-BD63-A58DF0A3F778}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 3 products under each segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;West&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk] / [federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{1AE686D8-A6AF-42C6-AB20-1C6EFBEC6203}' />
    </worksheet>
    <worksheet name='Q4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='YTD' datatype='real' name='[Calculation_1803691700431699970]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;year&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
            </column>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column caption='QTD' datatype='real' name='[Calculation_1803691700432384005]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;quarter&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
            </column>
            <column caption='MTD' datatype='real' name='[Calculation_1803691700432445446]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1803691700431888387]&lt;=TODAY() AND DATEDIFF(&quot;month&quot;,[Calculation_1803691700431888387],TODAY())=0 then [Sales] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Month' name='[mn:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Quarter' name='[qr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1803691700431699970]' derivation='Sum' name='[sum:Calculation_1803691700431699970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700432384005]' derivation='Sum' name='[sum:Calculation_1803691700432384005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700432445446]' derivation='Sum' name='[sum:Calculation_1803691700432445446:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700431699970:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700432384005:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700432445446:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700431699970:qk]&quot;</bucket>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700432384005:qk]&quot;</bucket>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1803691700432445446:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]'>
            <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='total' value='normal' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok] / ([federated.06izeie0da6jce1f6d03t07qonn6].[qr:Calculation_1803691700431888387:ok] / [federated.06izeie0da6jce1f6d03t07qonn6].[mn:Calculation_1803691700431888387:ok]))</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{68EFB33D-FC0A-4C00-9215-E44FA3E2F8A2}' />
    </worksheet>
    <worksheet name='Q5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='KPI' datatype='string' name='[Calculation_1803691700439146503]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Profit])&gt; 0 THEN &apos;Green&apos; ELSE &apos;red&apos; END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700439146503]' derivation='User' name='[usr:Calculation_1803691700439146503:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-style' value='normal' />
            <format attr='text-decoration' value='none' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700439146503:nk]' />
              <lod column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{53AD1392-9B73-4B1C-8E56-E7770AE54486}' />
    </worksheet>
    <worksheet name='Q6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Max' name='[max:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Min' name='[min:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.06izeie0da6jce1f6d03t07qonn6].[min:Order Date:ok]' />
              <lod column='[federated.06izeie0da6jce1f6d03t07qonn6].[max:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A8F4466E-E4C7-4CDE-ABC0-0770B25698F2}' />
    </worksheet>
    <worksheet name='Q7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Others' />
                <alias key='true' value='Top 50 Customers' />
              </aliases>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c#,##0,K' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]' />
              <wedge-size column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Top 50 Customers </run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]> ]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EB2B3386-FE6C-4A31-8702-081B04119C1C}' />
    </worksheet>
    <worksheet name='Q8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:sum:Sales:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:sum:Profit:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[pcto:sum:Sales:qk:4]&quot;</bucket>
              <bucket>&quot;[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='normal' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk] / [federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk])</rows>
        <cols>([federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk] / [federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names])</cols>
        <subtotals>
          <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{F10751BE-DF66-427C-9BA0-DDAC345661EE}' />
    </worksheet>
    <worksheet name='Q9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View by' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='sales by parameter' datatype='string' name='[Calculation_1215127524340072450]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;Region&apos; THEN [Region]&#13;&#10;WHEN &apos;Category&apos; THEN [Category]&#13;&#10;WHEN &apos;Sub-Category&apos; THEN [Sub-Category]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1215127524340072450]' derivation='None' name='[none:Calculation_1215127524340072450:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Calculation_1215127524340072450:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EC398ACD-6B0E-4684-ADDA-439D1D067940}' />
    </worksheet>
    <worksheet name='Segment Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='0' datatype='integer' name='[Calculation_1477462205088894983]' role='measure' type='quantitative' user:unnamed='Segment Wise'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_1477462205088903177]' role='measure' type='quantitative' user:unnamed='Segment Wise'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Sales Percent' datatype='real' name='[Calculation_1477462205091450892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])/ TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1477462205088894983]' derivation='Sum' name='[sum:Calculation_1477462205088894983:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1477462205088903177]' derivation='Sum' name='[sum:Calculation_1477462205088903177:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1477462205091450892]' derivation='User' name='[usr:Calculation_1477462205091450892:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088903177:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088903177:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088894983:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;&quot;$&quot;-#,##0,K' />
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205091450892:qk]' value='p0%' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00aa00' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088894983:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk]' />
              <wedge-size column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205091450892:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205091450892:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0000ff' fontname='Tableau Bold' fontsize='8'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Tableau Bold' fontsize='8'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]> ]]></run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Bold' fontsize='8'><![CDATA[(<[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205091450892:qk]>)]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088903177:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='11'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Tableau Bold'>Total Sales</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088894983:qk] + [federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462205088903177:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{5F66FA81-6D6B-48D0-A169-E30D07F26A4D}' />
    </worksheet>
    <worksheet name='Top 5 Selling'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;&quot;$&quot;-#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00aa00' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</rows>
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{6D0E795F-A5F9-4F5D-8BE4-4C31C0A3E95B}' />
    </worksheet>
    <worksheet name='Total Orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</column>
            <column>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='auto' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[ctd:Order ID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='14'>Total Orders</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9E9035C3-73C2-473A-AC41-57D2D1B582C9}' />
    </worksheet>
    <worksheet name='YoY % Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
          </datasources>
          <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
            <column caption='YoY %' datatype='string' name='[Calculation_1477462205301174298]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales]) &gt; 0 THEN &#13;&#10;&quot;▲&quot; ELSE &quot;▼&quot;&#13;&#10;END' />
            </column>
            <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' ordering-field='[federated.06izeie0da6jce1f6d03t07qonn6].[Calculation_1803691700431888387]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1477462205301174298]' derivation='User' name='[usr:Calculation_1477462205301174298:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Calculation_1803691700431888387:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2020' />
                <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2021' />
                <groupfilter function='member' level='[yr:Calculation_1803691700431888387:ok]' member='2022' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' value='90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[pcdf:sum:Sales:qk:1]' />
              <text column='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205301174298:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.06izeie0da6jce1f6d03t07qonn6].[pcdf:sum:Sales:qk:1]>]]></run>
                <run fontcolor='#00aa00' fontname='Tableau Bold' fontsize='16'><![CDATA[ <[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205301174298:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='14'>YoY % Growth</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</cols>
      </table>
      <simple-id uuid='{78EF0876-8DCD-4B3D-816E-B0C71287565D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Detail Report'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='126' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='125' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#e9f3f2' />
            </zone-style>
          </zone>
        </zone>
        <zone h='98077' id='203' type-v2='empty' w='17199' x='737' y='601' />
        <zone h='15865' id='12' is-centered='0' is-scaled='1' param='G:/ExcelR Assignments/Tableau/Assignment Tableau/Logo.png' type-v2='bitmap' w='11328' x='3147' y='3606' />
        <zone forceUpdate='true' h='6611' id='13' type-v2='text' w='15607' x='1573' y='18750'>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='22'>Superstore</run>
          </formatted-text>
        </zone>
        <zone h='6250' id='18' type-v2='dashboard-object' w='10321' x='18943' y='3606'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Superstore</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='6490' id='19' type-v2='dashboard-object' w='11061' x='30818' y='3486'>
          <button action='tabdoc:goto-sheet window-id=&quot;{A649E5DC-8CE1-4F06-B78E-DDC8D940CBFF}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Detail Report</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='11899' id='142' name='Total Orders' show-title='false' w='12715' x='2826' y='57692'>
          <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
        </zone>
        <zone h='12139' id='136' name='Current Year Sales' show-title='false' w='14959' x='1634' y='27764'>
          <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
        </zone>
        <zone fixed-size='95' h='11298' id='158' is-fixed='true' name='Previous Year sales' show-title='false' w='14708' x='2137' y='42909'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='13341' id='172' name='YoY % Sales' show-title='false' w='13702' x='2451' y='71755'>
          <layout-cache fixed-size-h='145' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='83774' id='254' param='vert' type-v2='layout-flow' w='80201' x='18793' y='13582'>
          <zone h='83774' id='255' name='Detail' show-title='false' w='80201' x='18793' y='13582'>
            <layout-cache fixed-size-h='254596' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6130' id='313' type-v2='dashboard-object' w='3457' x='42803' y='3365'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{20077A07-6BC3-4FC9-8BD4-4632DB3A9282}&quot; zone-id=&quot;313&quot; zone-ids=[313]</toggle-action>
            <button-visual-state>
              <image-path>G:/ExcelR Assignments/Tableau/Assignment Tableau/icons8-close-50.png</image-path>
              <tooltip-text>Hide Filters</tooltip-text>
            </button-visual-state>
            <button-visual-state>
              <image-path>C:/Users/Gautami/Downloads/icons8-filter-50.png</image-path>
              <tooltip-text>Show Filters</tooltip-text>
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='357' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='356' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6490' id='19' type-v2='dashboard-object' w='11061' x='30818' y='3486'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{A649E5DC-8CE1-4F06-B78E-DDC8D940CBFF}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Detail Report</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='15865' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='G:/ExcelR Assignments/Tableau/Assignment Tableau/Logo.png' type-v2='bitmap' w='11328' x='3147' y='3606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='18' type-v2='dashboard-object' w='10321' x='18943' y='3606'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Superstore</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83774' id='255' is-fixed='true' name='Detail' show-title='false' w='80201' x='18793' y='13582'>
                  <layout-cache fixed-size-h='254596' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6611' id='13' type-v2='text' w='15607' x='1573' y='18750'>
                  <formatted-text>
                    <run fontname='Tableau Bold' fontsize='22'>Superstore</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='12139' id='136' is-fixed='true' name='Current Year Sales' show-title='false' w='14959' x='1634' y='27764'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='11298' id='158' is-fixed='true' name='Previous Year sales' show-title='false' w='14708' x='2137' y='42909'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11899' id='142' is-fixed='true' name='Total Orders' show-title='false' w='12715' x='2826' y='57692'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='13341' id='172' is-fixed='true' name='YoY % Sales' show-title='false' w='13702' x='2451' y='71755'>
                  <layout-cache fixed-size-h='145' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D9B3BE0E-578E-488B-9EF6-A4E652D13907}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Q11'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='38750' id='5' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='91600' x='3500' y='11000'>
          <zone h='38750' id='7' type-v2='text' w='91600' x='3500' y='11000'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>What is Replace References in tableau? </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#000000' fontsize='11'>It will allow us to select a field that will replace any reference to the chosen column across the work.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='36375' id='6' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='91200' x='3800' y='54500'>
          <zone forceUpdate='true' h='36375' id='8' type-v2='text' w='91200' x='3800' y='54500'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>How to handle the NULL values for measures?</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontsize='12'>By using calcualted field</run>
              <run bold='true' fontcolor='#202124' fontsize='12'>,</run>
              <run fontcolor='#202124' fontsize='12'> we can handle null values. If Sales is null means it will replace with 0 else it will display the Sales value. If we want any other value to be replaced, we can replace in place of 0</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='38750' id='7' type-v2='text' w='91600' x='3500' y='11000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>What is Replace References in tableau? </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='11'>It will allow us to select a field that will replace any reference to the chosen column across the work.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='36375' id='8' type-v2='text' w='91200' x='3800' y='54500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='12'>How to handle the NULL values for measures?</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>By using calcualted field</run>
                    <run bold='true' fontcolor='#202124' fontsize='12'>,</run>
                    <run fontcolor='#202124' fontsize='12'> we can handle null values. If Sales is null means it will replace with 0 else it will display the Sales value. If we want any other value to be replaced, we can replace in place of 0</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CFE831D4-3310-40CF-A893-AE2E7C9E0185}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Superstore Analytics'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders (Sample - Superstore)' name='federated.06izeie0da6jce1f6d03t07qonn6' />
      </datasources>
      <datasource-dependencies datasource='federated.06izeie0da6jce1f6d03t07qonn6'>
        <column caption='NOD' datatype='datetime' name='[Calculation_1803691700431888387]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
        </column>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1803691700431888387]' derivation='Year' name='[yr:Calculation_1803691700431888387:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='126' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='125' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#e9f3f2' />
            </zone-style>
          </zone>
        </zone>
        <zone h='98077' id='203' type-v2='empty' w='17199' x='737' y='601' />
        <zone h='15865' id='12' is-centered='0' is-scaled='1' param='G:/ExcelR Assignments/Tableau/Assignment Tableau/Logo.png' type-v2='bitmap' w='11328' x='3147' y='3606' />
        <zone forceUpdate='true' h='6611' id='13' type-v2='text' w='15607' x='1573' y='18750'>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='22'>Superstore</run>
          </formatted-text>
        </zone>
        <zone h='6250' id='18' type-v2='dashboard-object' w='10321' x='18943' y='3606'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Superstore</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='6490' id='19' type-v2='dashboard-object' w='11061' x='30818' y='3486'>
          <button action='tabdoc:goto-sheet window-id=&quot;{20077A07-6BC3-4FC9-8BD4-4632DB3A9282}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Detail Report</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='11899' id='142' name='Total Orders' show-title='false' w='12715' x='2826' y='57692'>
          <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
        </zone>
        <zone h='12139' id='136' name='Current Year Sales' show-title='false' w='14959' x='1634' y='27764'>
          <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
        </zone>
        <zone fixed-size='95' h='11298' id='158' is-fixed='true' name='Previous Year sales' show-title='false' w='14708' x='2137' y='42909'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='45913' id='96' name='Monthly Trend' w='80243' x='18734' y='52284'>
          <layout-cache minheight='222' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='35938' id='52' name='Category Wise Sales' w='25448' x='18670' y='13101'>
          <layout-cache type-h='cell' type-w='fixed' />
        </zone>
        <zone h='36178' id='59' name='Segment Wise' w='26790' x='44821' y='12981'>
          <layout-cache minheight='151' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='35817' id='82' name='Top 5 Selling' w='26215' x='72634' y='12861'>
          <layout-cache cell-count-h='5' non-cell-size-h='50' type-h='cell' type-w='fixed' />
        </zone>
        <zone h='11418' id='172' name='YoY % Sales' show-title='false' w='14205' x='2640' y='71755'>
          <layout-cache fixed-size-h='145' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='5769' hidden-by-user='true' id='303' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='33941' x='64739' y='4567'>
          <zone h='5770' hidden-by-user='true' id='296' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' type-v2='filter' values='database' w='11314' x='64739' y='4567'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='122' h='5770' hidden-by-user='true' id='290' is-fixed='true' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' type-v2='filter' values='database' w='11313' x='76053' y='4567'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5770' hidden-by-user='true' id='295' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]' type-v2='filter' values='cascading' w='11314' x='87366' y='4567'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6130' id='304' type-v2='dashboard-object' w='3457' x='42615' y='3726'>
          <button action='' active-visual-state-index='1'>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}&quot; zone-id=&quot;304&quot; zone-ids=[303]</toggle-action>
            <button-visual-state>
              <image-path>C:/Users/Gautami/Downloads/icons8-close-50.png</image-path>
              <tooltip-text>Hide Filters</tooltip-text>
            </button-visual-state>
            <button-visual-state>
              <image-path>C:/Users/Gautami/Downloads/icons8-filter-50.png</image-path>
              <tooltip-text>Show Filters</tooltip-text>
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='362' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='361' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='6490' id='19' type-v2='dashboard-object' w='11061' x='30818' y='3486'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{20077A07-6BC3-4FC9-8BD4-4632DB3A9282}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Detail Report</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='127' h='15865' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='G:/ExcelR Assignments/Tableau/Assignment Tableau/Logo.png' type-v2='bitmap' w='11328' x='3147' y='3606'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='18' type-v2='dashboard-object' w='10321' x='18943' y='3606'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Superstore</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35817' id='82' is-fixed='true' name='Top 5 Selling' w='26215' x='72634' y='12861'>
                  <layout-cache cell-count-h='5' non-cell-size-h='50' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36178' id='59' is-fixed='true' name='Segment Wise' w='26790' x='44821' y='12981'>
                  <layout-cache minheight='151' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5770' hidden-by-user='true' id='296' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' type-v2='filter' values='database' w='11314' x='64739' y='4567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='122' h='5770' hidden-by-user='true' id='290' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]' type-v2='filter' values='database' w='11313' x='76053' y='4567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5770' hidden-by-user='true' id='295' mode='checkdropdown' name='Category Wise Sales' param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]' type-v2='filter' values='cascading' w='11314' x='87366' y='4567'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35938' id='52' is-fixed='true' name='Category Wise Sales' w='25448' x='18670' y='13101'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6611' id='13' type-v2='text' w='15607' x='1573' y='18750'>
                  <formatted-text>
                    <run fontname='Tableau Bold' fontsize='22'>Superstore</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='12139' id='136' is-fixed='true' name='Current Year Sales' show-title='false' w='14959' x='1634' y='27764'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='11298' id='158' is-fixed='true' name='Previous Year sales' show-title='false' w='14708' x='2137' y='42909'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45913' id='96' is-fixed='true' name='Monthly Trend' w='80243' x='18734' y='52284'>
                  <layout-cache minheight='222' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11899' id='142' is-fixed='true' name='Total Orders' show-title='false' w='12715' x='2826' y='57692'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='11418' id='172' is-fixed='true' name='YoY % Sales' show-title='false' w='14205' x='2640' y='71755'>
                  <layout-cache fixed-size-h='145' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F7835A3A-630A-4877-A2FB-5977F07A72DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AA7447D-0671-4F82-98CA-1AAEC59EF90C}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700427333633:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64269236-E87F-439D-A282-81A3E5A20AD7}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{170E1CD1-C36A-4305-94F0-2EB8768EF1B8}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{413F57A7-7291-412C-939E-DF961E6D8BDF}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700439146503:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700439146503:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11986D9B-A989-4D7E-B5FD-073833D5A226}' />
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[min:Order Date:ok]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF6C2520-6838-4D3E-A366-AEC689ACA3C8}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[io:Customer Name Set:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8B2F20C7-AA43-49B8-B775-F8DFA0520D9E}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0378C7D2-C43A-41FD-B360-6C99DB0ECE9B}' />
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Calculation_1215127524340072450:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6716774-4BEE-4843-B3DD-0920D5A98142}' />
    </window>
    <window class='worksheet' name='Q10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FD177F0-E547-462F-AEAA-6666DBF8DFB2}' />
    </window>
    <window class='dashboard' name='Q11'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1036D090-FF16-4CD4-8FA3-0F64552EA6A9}' />
    </window>
    <window class='worksheet' name='Q12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sales (bin):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{85E60448-AC93-4D95-BCDF-4CFF37F37BFF}' />
    </window>
    <window class='worksheet' name='Q13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1215127525983891465:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:City:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Country/Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:State/Province:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1215127525983891465:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7F53DDBA-6B4A-4668-AE8A-6D8855A1A53E}' />
    </window>
    <window class='worksheet' name='Q14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.06izeie0da6jce1f6d03t07qonn6].[Product Name (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[Product Name (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AD46733-AC55-421B-B832-5747E42A2B33}' />
    </window>
    <window class='worksheet' name='Q15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462204624543744:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[mn:Order Date:ok]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462204624543744:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{115D3219-23CE-44C6-8735-7D051818405A}' />
    </window>
    <window class='worksheet' name='Q16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1803691700439146503:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BF970914-C70A-4741-A52D-C4AACC0FDC12}' />
    </window>
    <window class='worksheet' name='Q17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.06izeie0da6jce1f6d03t07qonn6].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[sum:Calculation_1477462204626378756:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{529F87AF-C2C3-4F9C-AD7B-656A0DC811F1}' />
    </window>
    <window class='dashboard' name='Superstore Analytics'>
      <viewpoints>
        <viewpoint name='Category Wise Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Current Year Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Previous Year sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Segment Wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Selling'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Orders'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoY % Sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D4F5C011-8FDF-4EBF-8B05-78CF772AFB27}' />
    </window>
    <window class='dashboard' name='Detail Report'>
      <viewpoints>
        <viewpoint name='Current Year Sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Detail' />
        <viewpoint name='Previous Year sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Orders'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoY % Sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{20077A07-6BC3-4FC9-8BD4-4632DB3A9282}' />
    </window>
    <window class='worksheet' maximized='true' name='Q19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1izzj2w0sa742j1f1m1791uocipq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1izzj2w0sa742j1f1m1791uocipq].[ctd:show_id:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1izzj2w0sa742j1f1m1791uocipq].[none:cast:nk]</field>
            <field>[federated.1izzj2w0sa742j1f1m1791uocipq].[none:country:nk]</field>
            <field>[federated.1izzj2w0sa742j1f1m1791uocipq].[none:show_id:ok]</field>
            <field>[federated.1izzj2w0sa742j1f1m1791uocipq].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49CC59D4-89C9-4233-A9EB-BF80C454B429}' />
    </window>
    <window class='worksheet' hidden='true' name='Category Wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Region:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Calculation_1803691700431888387:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{290C63E7-700A-41D9-96EA-1832FB71004B}' />
    </window>
    <window class='worksheet' hidden='true' name='Current Year Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[tyr:Calculation_1803691700431888387:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{151F5EA9-2269-4C0D-9B39-DB6B7E061208}' />
    </window>
    <window class='worksheet' hidden='true' name='Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Customer Name:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product ID:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Sub-Category:nk]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E0E3DA9-7902-4D07-BC2F-5D5265993D87}' />
    </window>
    <window class='worksheet' hidden='true' name='Monthly Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='34'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.06izeie0da6jce1f6d03t07qonn6].[tmn:Order Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61FB441A-CD22-4519-BD44-72D21E20F976}' />
    </window>
    <window class='worksheet' hidden='true' name='Previous Year sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B146BE13-F5AA-4167-8F96-5471A304B8B6}' />
    </window>
    <window class='worksheet' hidden='true' name='Segment Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[:Measure Names]</field>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8080DB0C-946D-42A3-8FE6-C45B402622A5}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 Selling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4642E7A2-E9C2-4AE8-AF08-9ED082EB4FF1}' />
    </window>
    <window class='worksheet' hidden='true' name='Total Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D8BF8C35-1BC6-4603-A971-28FBBD8D05C3}' />
    </window>
    <window class='worksheet' hidden='true' name='YoY % Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06izeie0da6jce1f6d03t07qonn6].[usr:Calculation_1477462205301174298:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{11AE8347-294B-449B-A55E-3D68AA0BFFAE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Detail Report' width='192'>
      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
    </thumbnail>
    <thumbnail height='69' name='Q1' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAABFCAYAAADErU1mAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAR+UlEQVR4nO2dfVhU1dqH75IhRmos4FLANDGCysQP5qBQfmFpap5OoqHSCbPXQHFUOGFp
      CRGankzwiCITUU5vlGjqMQMLFXVSQpwy8Ct9CVBKEISTWwGZGZn3j4HhYwZE68LxsO9/uFjr
      WR975jfPXnvttdZzl8FgMCAiYiXcfbs7ICLSHFGQIlaFKEgRq0IUpIhVIQpSxKoQBSliVYiC
      FLEqREGKWBWiIEWsClGQIlaFKMj/Us6pgpDL5USrb3dPbg6b292BLom+imPb1pKQsp/8qlpA
      ioPXGF5VLCJgiMMd9KWoiZZHkN4iTYqD+0AmBC0geMKjONzkxYgesrPRF6J6dRJzVmc0iBGg
      lqr8DFbPmcSrqkL0t7WDf5RaqgpySY15iUkzVpMr3FxpUZCdip4f4ueScFKHxHkc0ZuzyNZo
      0GRnsXnl87hJdJxMmEv8D3eYJD0VbNNo0DRcy7+TFDzlLEFXlMbCN7Zx8SaqEgXZmVTvI217
      JcjGs+Lz95jsLsMWwFaG+zPLSFkxHhmVbE/bR3VjmXMqguRyglTnAIF8ZRjjRsiRNx8cCvmk
      Rc02pst9GTN1Hkk5ll2T9uxXRM0exwi5HLnvGPJbmamj5cjl0agBfWkGUVPH4CsPQnWug9do
      K+NBeTBrt/+LqY6gO7qBT3/o+EckCrIT0R9Rk6UDl4Ag/GXm+TL/IAJcQJel5oiZk7xOoUpB
      SPIRTHd6AEFN9LTZrM7Ib0jXcaU4lz1HS83bP6XkpeB3ycivwmh6hdnTVmPRIQtqYmdFkVF8
      Bd2tXKytD4oIfyQIqHNOdbiYKMhO5LeSYgCGDny8DYvHGTgUoJiS31plnUzi9YSzPPj8Sraq
      c9DEjATg7BdrSa8ER18FSRnZptvm+pkurSq4yLa4ZAp1jvhHb0Wdo0GTvQMq0/hoZ2Ur26t8
      vfwN0vFFkZRBtiaV4Idu/nrtnxiEB1B6oazD42JRkHcIZ7K+4z5FKl8sewa37o2PrqfY8/V5
      kPgTsSoYeU9bY7KtDBfHVi74t71k/AQS/wiiJ7vR3Qaw7cOTwNHsI01DBAAOkpU3jritCQTL
      e2J7q53u3Yd+AMUltP59tYUoyDsE2fgVJAT3bzUldInyUsBvNE/Z36CCc4WcBQYPk9PcdKgn
      UFbBpRbGnszbuIyRFoYVN8VvJRQD9OtD7w4WuXOmvP4L6O3mjoQz/Hj8FIy0dNs+xfEfAYk7
      bq2+QRePh2lTH/fey430iF6PDji6cjzyla3yPFsbu+Pe/49Lo/pEHmcBF1fnDgtNFGQnYuPt
      xwhJOlmfpZDx9zVMbKUwISuVbaUg8ffDu0PfjA02EuDHY+TrR+LVXpmHPRhAOlfmfM72EI9b
      v4iOoj/FJmUWOvry3DNtjZnNEW/ZnYn9WAKnOILuILEzl7KrQEALoBUo2BPLq299i4AjUwLH
      3tjjATAInxESKN1MbPx3lBsro/zELrbsa/WU3fsv+PWF85siWLqrAEFrTC7QbGFlzJcdHuPd
      EH0NpSd2ETvjVT45D5JR/8OMm9C/6CE7FRu8wzeiOBFEwslMYqZnEtMiX8IAxUbCO+YeAXvG
      znoJZdYnFKWFMzGtWU0SSStbD2YsmsT2iHQyY6aT2bxhTwUzb+VyGjmTQIA8wSxZMuAVlNET
      Www1zqmCCEg4A5PiTDMFnFMRFJDAGSaJHrLTselPcEo6yZET8XKQNiRKcfCaSGRyOilmDy43
      qO7xMDZ9rGD0g8a6JPc9RsDKHahC+5vZykbGsPXjSCZ6OdDYstdEBfGrZnALszptIMXB3Yeg
      6M9ITwnD6yYfjO4SDwoQsSZEDyliVYiCFLEqREGKWBWiIEWsClGQIlaFKEgRq0KcGO8y6Kkp
      2o9ydQq7jxcY105KHfg4PdNsrlDIT+ODtSnsz6+iVnIf/Yb8lXnLFPi7tJKLthzNjvUkfvod
      py9eQYeE+/oN4a/zlqHwd2khLn1NEfuVq0nZfZyC5vuIFr1OYLMOiPOQXYS8hOcIVZWZL7Z1
      DESZHml6d16dHcuUBTtpvUISqS/Lvkzg+V4N/1d+zaK/vcOh2taGABL+suTfbAzo1dg4z4Wq
      KLO40teRQGU6kQ0dEG/ZXYTLl8rAeShB0ZvYpc5Bo9GQnZEElWl8ntm4GvIsn32wk0qkDFL8
      r2kRb7S/I9R+z6o13zatm7xaSUWtlEcmKohv3BuUo2Zrw96go5u+5FRT45ThzNCgaDbtUpOj
      0aDJziBJ4YsjlaR9ntlUr0GkC1Br+OngYUOlzjznWW9vw8xNxcZ/NO8bxnh7G4ZHpBsuNzfS
      nTSsf8Hb4O0dYUi/2pD262HDvjN1Ftq6bPhqgbfB2zvKcLCx9Z8OGg5batyQZ1j7rLfBe+Ym
      Q0MPDKKH7BLYMWikn4U90noqkNDb2QmA334+gQD4jR3Vcu2lzeOMGesCZPNDXkNabz/8PSys
      JRc05BwH+rri3Nj6oJH4WdigrS/UkFsBkt7OODWkiYLsqmhL2BM7A8mAUELHGhe7lV0oAR5m
      wKPmi98ecvMAdPz+e7VZnhE9VcdUKKYt5lvBkUmLZtD2qjMtJXtimRGUyBnJAEJDm5bbiU/Z
      XRDt2TQWR6zlUJmOxKxgGheHV18VABe6dTMvY3/vvQCUVVyC1qs19VVkJ4TxRur/UYsjvks2
      sqyt/Q/as6QtjmDtoTJ0EjcC/5VAcLPV6aIguxQC+cpwwpLzqEXKIwEr8GmmG/t7ZYDAVQtO
      sLKiHIB+fVrurdCXZhA1J5bMMh0S56dQvPcuwW2sORPylYSHJZNXC9JHAlgRF2k2lSQKsssg
      oI6dyRs7y8D5KRSxUQQNcWhh4ezaBzhJYXE1PN7SC14s+xWQYGfXJBl9YSohwfHk1Up5JOBd
      3v/HM/RpY4uioI5l5hs7KcOZpxSxRAUNsXjujyjILkK1eg3v7CxD5htJwppALD2P9H70CWSc
      JHvfQYSJzVZ660+xf18pMArvQY2J50hdFk+e3o3AdUrC/do5JKtazZp3dlIm8yUyYQ2Blhpv
      QHyo6RJc5OtP0xEk/kSssixGALyfJ7Av6A7GothwjCo9oC1h19Jw4/4Y/3GManCc+twvUJ2B
      vrNWENmeGIGLX39KuiDBP2JVu2IE8U1NF8HSsXnNaLa/paNvakx7Y9rEE8U244kX6mg5EW02
      DjCJOE0MIxE9ZNfgXBEFHTS191vWct+N5D76+QTx/pb4pteGwLnC9sTYonGKOto4oocUsTJE
      DyliVYiCFLEqbjjto9FoOqMfIiKAOIYUsTLEW7aIVSEKUsSqEAUpYlWIghSxKqxMkGqi5a1C
      XrRFQ7iMDtmK3DHc8mqfG7/LxBhQJzX4TzzqTaQjXLt2jbS0NDZv3kxFRQUSiYTBgwcTHh6O
      h8eNTw8tLCwkJiaG06dP061bN3x9fXnzzTfp2bNnC7uamhoSExPJyMhAEARkMhkzZ87k5Zdf
      xta25SKKxj5t2bKFiooKADw9PQkLC8PHx4e77zb6RivzkCJ/FK1Wy3vvvcfRo0fZuHEjubm5
      HDhwgFGjRrFo0SJ++umndsufOHGCuXPnMmHCBA4fPsy+fftwcnJi/vz5XLrUdDS+IAgsXLiQ
      S5cukZaWRm5uLhs2bCAzM5Ply5ej1WpNtj///DPTp0+nqKiIxMREcnJyOHz4MNOnTyc6Opq9
      e/c2deCmNq+1SbFh08yWO81ujYOGKG9vg3dUB2op3mSY2VHbLsSRI0cM06dPN5SXl5vlKZVK
      Q0REhEGns7QD0GDQ6XSGiIgIQ1xcnOH69eum9Lq6OkN4eLhBqVSa0nbu3GkICQkx1NTUtKij
      qKjIMHnyZMPBg03fS05OjuHQoUMW21SpVIaFCxea+tRJHlJLuSaN9+ZNZYyvHLlcjnzEOGav
      3EOJ1pJ9HSV74pn3txHI5XJGjJvNyqzSjgXf0VeRnTSPqWN82ylr3JD0+tQx+MobwrFNms3r
      SVmU3mFhBlsjCAJ2dnZ0797dLK9///5UVVVRV1dnseyFCxc4f/48EyZMMN1CAWxtbXn22WfJ
      ycmhutq4vyE7O5uRI0cilUpb1NGvXz98fHxQq5vG9sOGDePJJ5+02GbPnj25evWqyaN2kiBz
      2BC6mu25xVxpPL2gtor8bUsIXqHGbAtHZhQvLkkl99faBtN8ti2eRaz6RqFFBb5d+jwLPsql
      uKEhY9kpKLY1hYDU/xDPjDkJHDCFTdNx5WI+Bz5KIfNPO/399vDggw9SXV1tGqc1Ul9fz/Hj
      x3FzczMTUSNlZWXY29vj4tI6Chi4ublRW1vL5cuXTWmWRA8gl8v55ZdfTOJtC61WS2ZmJl5e
      Xqa6OkmQPXgsaDFJm/cYT0PQ5KDeGo2/IwjpOznYut/O41i6aVfDyQkZJL0yAAmVpCt30F4M
      SH1uIv/MqkUy4JWGMGs5ZCa/wgCJjqMbPqUxBmRe1m4qceGFDzKMJy5oclDv2Uy8YjS97/BN
      HR4eHowfP54lS5Zw+vRp6uvrqampQalUcuzYMebMmdPC+zVHEATuuusubGzMP4QePXpw/fp1
      0zjS1dUVtVrdYqzYiKurK9euXWtXkL///juRkZEIgsCsWbNM6Z308Q9iytRyNqycy9LGg45M
      lGG2s9JrLJOfaPyV9kQepiKFybz8SSYHzgW3EXfvN9I2fIkgC0SpCsO7IdVhSBiqf5Yjj0jj
      K3Uk3iPB+8VXGbA9nh2vT2QHgNQBrzFBvDInmKc7GnLqNvPhhx/y4Ycfmv5/+umnWbVqFXq9
      nsrKSnr16mXyhN26daNXr17U1tZSWVlp0QPeLAsWLODChQu8++677N+/n7q6Onr06MGwYcMY
      PHgwUqmUe+65p0WZa9eukZyczNatW5k/fz7x8fFmP45OEaT+1Aamv/wZ9814n8RVw3CXGacE
      jFNHHaujtqYa2o5lBejR6wEhjRB5Wjt2wENBpKQ/zrakZHYcOE5BVRX5GQmE78kifLOKoDtg
      nuq1117jtddeM0vfsWMHhYWFxMfHmwR5zz33MGXKFBwdHfnggw9Yt24dMpn5ZymTyTAYDOj1
      5gPpy5cv061bN5ycnExprq6uLF++3Mz2m2++wc7ODjs7O1OaIAhERUVRXl5Oamoqffr0sXhd
      nSLIvPRtnGcccf8YgfutVKA/Rc73AkhGmIVca+IhHnlUAoUjWLH3fcbfIPKQjcMQApcmErgU
      Y+Cib5cTFpNFxoFzBN1K6FMr4dixYwwdOtTiOPGxxx6jpqaG4uJivLy8zPL79u2LVqultLSU
      Hj16tMgrKipCKpWapbemvr6e3Nxchg8fbvKQ9fX1rF+/HkEQSExM5P7772+zfKeMIY0nIuSw
      L6sKPaAVCvhOFcWbH7UxsV53mf/UGH+lWqGgadfbiPZDrg3yGYFEl8XyBUo0pTUNT9Z6akpP
      sFf5OhuPGO2yV/+dKNV3FPynwcbWDtn9jtgD+uvX/6Srvj24urpy4sQJi2O706dPo9VqzSa4
      G3FycsLFxYXdu3dTX19vStdqtXzzzTeMHj0ae/v2f+l5eXnk5+czevRoU9rZs2fJzc1l8eLF
      7YoROslDevv5I0nPIn3xuGY736Q4O8vA0vmCe2N4Zm/LGFdIB7EobHy7Idfsx4YS+vl3JOQl
      Ezo52Sx/Upzxr/7qaTLSwsloPVyQDCB8rHnAoTuJKVOmsGDBApYvX05oaCiurq7U1dWxf/9+
      EhISeOGFF3B2Nh4DpdfrCQ0NZd26dXTv3h0bGxtCQkJYtGgRLi4uBAQEoNPpWLt2LZWVlUye
      PNnUTnl5OUlJSUybNg1PT0+uX7/O999/z5o1awgJCaFv374m2+zsbPr164e7+43vj50iSPvx
      b6MsqyfqowP8WmuMWqVYEoZX9lzzMaTjJBbPv58Dqbs5XtD6BNcbNGTTn+CU7fRJiCXxq2MN
      Uz9SHNwHMiFoAcF+RjO/hZ8Rff86Ui2d5nrn3q0B47SPSqUiKSmJl156CUEQuPvuu/H09GTZ
      smX4+PiYbAsKCnjxxRdbTN94eHiwfv16YmJiiIuLM706XL16NQ888IDJzsnJiaFDh/L2229T
      UlICGF8FvvXWWy3aAOPDzKFDhxg+fLjFPg8cOJD169djb28vrhjvyqxbt4558+ZZnOa5XYjv
      srsoFRUVFBcXW5UYAf4f3i5ez71vR6EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q12' width='192'>
      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
      0/CjygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q13' width='192'>
      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
      lP8fxHn1GOEGAzgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q14' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q15' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q16' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q17' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q19' width='192'>
      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
      jIwiNtf+/GAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='99' name='Q2' width='192'>
      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
      qgTG+v+QOByUWtScvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
      LSUfy+UnJf8PkJ1Zk/Ivo4kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
      AyDRGACJ9n8R+ss/razfyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Q9' width='164'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Superstore Analytics' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
